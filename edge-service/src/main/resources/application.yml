server:
  port: 9000
  netty:
    connection-timeout: 5s
  shutdown: graceful
spring:
  session:
    store-type: redis
    timeout: 10m
    redis:
      namespace: polar:edge
  redis:
    connect-timeout: 5s
    host: localhost
    port: 6379
    timeout: 500ms
  cloud:
    gateway:
      default-filters:
        - name: RequestRateLimiter
          args:
            redis-rate-limiter.replenishRate: 10 # this is 10 tokens / second
            redis-rate-limiter.burstCapacity: 20
            redis-rate-limiter.requestedTokens: 1 #each request costs 1 token
      routes:
        - id: catalog-route
          uri: ${CATALOG_SERVICE_URL:http://localhost:9002}/books
          predicates:
            - Path=/books/**
          filters:
            - name: CircuitBreaker
              args:
                name: catalogCircuitBreaker
                fallbackUri: forward:/catalog-fallback
        - id: order_service
          uri: ${ORDER_SERVICE_URL:http://localhost:9003}/orders
          predicates:
            - Path=/orders/**
          filters:
            - name: CircuitBreaker
              args:
                name: orderCircuitBreaker
logging:
  level:
    io.github.resilience4j: DEBUG
    com.polarbookshop.edgeservice: DEBUG
